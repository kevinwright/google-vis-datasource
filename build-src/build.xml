<project name="gviz-visualization-java" default="all" basedir=".">

  <!-- Paths for build outputs -->
  <property name="build" location="../build"/>
  <property name="build.class.main" location="${build}/class/main"/>
  <property name="build.class.test" location="${build}/class/test"/>
  <property name="build.class.example" location="${build}/class/example"/>
  <property name="build.genfiles" location="${build}/generated-sources"/>

  <!-- Paths for sources -->
  <property name="src" location="../src"/>
  <property name="datasource" value="java/com/google/visualization/datasource"/>
  <property name="src.datasource" location="${src}/main/${datasource}"/>
  <property name="src.test.datasource" location="${src}/test/${datasource}"/>
  <property name="src.example" location="../examples/src/java"/>

  <!-- User properties -->
  <property file="build.properties"/>

  <!-- Clean build output -->
  <target name="clean">
    <delete dir="${build}"/>
  </target>

  <!-- Create build output directories -->
  <target name="create-dirs">
    <mkdir dir="${build.class.main}"/>
    <mkdir dir="${build.class.test}"/>
    <mkdir dir="${build.class.example}"/>
    <mkdir dir="${build.genfiles}"/>
  </target>

  <!-- Generate query parser -->
  <target name="parser-javacc" depends="create-dirs">
    <mkdir dir="${build.genfiles}/${datasource}/query/parser"/>
    <java classname="javacc" failonerror="true">
      <arg value="-OUTPUT_DIRECTORY=${build.genfiles}/${datasource}/query/parser"/>
      <arg value="${src.datasource}/query/parser/QueryParser.jj"/>
      <classpath>
        <pathelement location="${javacc.zip}"/>
      </classpath>
    </java>
  </target>

  <!-- Create datasource library jar.
       NOTE: If you want to use the SqlDataSourceHelper you will have to provide mysql jar
             in your runtime environment.
             See: http://www.mysql.com/products/connector/j/ -->
  <target name="datasource" depends="parser-javacc">
    <javac srcdir="${src.datasource}:${build.genfiles}/${datasource}/query/parser"
           destdir="${build.class.main}">
      <classpath>
        <pathelement location="${guava.jar}"/>
        <pathelement location="${icu4j.jar}"/>
        <pathelement location="${jakarta-commons-lang.jar}"/>
        <pathelement location="${jakarta-commons-logging.jar}"/>
        <pathelement location="${opencsv.jar}"/>
        <pathelement location="${servlet-api.jar}"/>
      </classpath>
    </javac>
    <jar destfile="${build}/visualization-datasource-1.0.3.jar"
         basedir="${build.class.main}"/>
  </target>


  <!-- Create datasource examples jar.
       NOTE: If you want to run the com.google.visualization.datasource.example.SqlDataSourceServlet
             example you will have to provide
             mysql jar in your runtime environment.
             See: http://www.mysql.com/products/connector/j/ -->
  <target name="example" depends="datasource">
    <javac srcdir="${src.example}" destdir="${build.class.example}">
      <classpath>
        <pathelement location="${build.class.main}"/>
        <pathelement location="${guava.jar}"/>
        <pathelement location="${icu4j.jar}"/>
        <pathelement location="${jakarta-commons-lang.jar}"/>
        <pathelement location="${jakarta-commons-logging.jar}"/>
        <pathelement location="${servlet-api.jar}"/>
      </classpath>
    </javac>
    <jar destfile="${build}/visualization-datasource-examples.jar"
         basedir="${build.class.example}"/>
  </target>

  <!-- Build the tests. -->
  <target name="build-test" depends="datasource">
    <javac srcdir="${src.test.datasource}" destdir="${build.class.test}">
      <classpath>
        <pathelement location="${junit.jar}"/>
        <pathelement location="${easymock.jar}"/>
        <pathelement location="${build.class.main}"/>
        <pathelement location="${guava.jar}"/>
        <pathelement location="${icu4j.jar}"/>
        <pathelement location="${jakarta-commons-lang.jar}"/>
        <pathelement location="${servlet-api.jar}"/>
      </classpath>
    </javac>
  </target>

  <!-- Run the tests. -->
  <target name="test" depends="build-test">
    <junit printsummary="yes" haltonfailure="yes">
      <batchtest>
        <fileset dir="${build.class.test}">
          <include name="**/**Test.class/"/>
        </fileset>
      </batchtest>
      <classpath>
        <pathelement location="${junit.jar}"/>
        <pathelement location="${easymock.jar}"/>
        <pathelement location="${build.class.main}"/>
        <pathelement location="${build.class.test}"/>
        <pathelement location="${guava.jar}"/>
        <pathelement location="${icu4j.jar}"/>
        <pathelement location="${jakarta-commons-lang.jar}"/>
        <pathelement location="${jakarta-commons-logging.jar}"/>
        <pathelement location="${opencsv.jar}"/>
        <pathelement location="${servlet-api.jar}"/>
      </classpath>
      <formatter type="plain" usefile="false"/>
    </junit>
  </target>

  <!-- Jar the sources. -->
  <target name="source-jar">
    <jar destfile="${build}/visualization-datasource-1.0.3-src.jar"
         basedir="${src}/main/java" />
  </target>

  <target name="build" depends="datasource"/>

  <target name="all" depends="clean,build,example,test"/>

</project>
